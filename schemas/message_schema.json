{
  "title": "Message Envelope",
  "description": "Describes the structure of data that is used to pass information between steps of the workflow. It contains information about the configuration of the entire run, the item being processed, resources in AWS, and payload information from the previous step.",
  "type": "object",
  "properties": {
    "cumulus_meta": {
      "$ref": "#/definitions/CumulusMetaType"
    },
    "meta": {
      "description": "Metadata taken from the collection configuration and other configuration settings. Tasks may add fields to the 'meta' object at will (in their returned output) in order to pass data to future tasks. Tasks should avoid assuming that fields are present in the meta object and avoid naming fields to put in the meta object, preferring instead to let configuration decide what goes into the object.",
      "type": "object",
      "properties": {
        "cmr": {
          "description": "(optinal) CMR credential for exporting metadata to CMR",
          "$ref": "#/definitions/CmrType"
        },
        "provider": {
          "description": "Provider configuration information taken from the 'providers' of collection configuration.",
          "$ref": "#/definitions/ProviderType"
        },
        "collection": {
          "description": "Metadata taken from the 'meta' attribute of the collection. These can contain any data that is specific to the collection.",
          "type": "object"
        },
        "queues": {
          "description": "List of SQS queues that are used by the cumulus-api",
          "additionalProperties": { "type": "string" }
        }
      },
      "patternProperties": {
          "^_.*$": {
            "description": "Any fields starting with _ are ignored."
          }
      },
      "required": [
        "provider",
        "collection",
        "queues"
      ]
    },
    "workflow_config": {
      "description": "Defines configuration for tasks that are part of a workflow as a map of task name to a JSON object containing configuration settings",
      "$ref": "#/definitions/WorkflowConfigType"
    },
    "exception": {
      "description": "An optional field that a task can return with any valid as a signal that the task aborted for a reason. Information in this can be used by the workflow to determine next steps."
    },
    "payload": {
      "description": "A Task-specific payload. This can be any data type required by the Task. It can be considered the input and output of the Task, whereas the other fields are execution context. Tasks should document their expected payload input and output formats. Generally a Task will return an object which is nearly identical to its input in all fields but 'payload', and 'payload' will be completely different"
    }
  },
  "patternProperties": {
    "^_.*$": {
      "description": "Any fields starting with _ are ignored."
    }
  },
  "additionalProperties": false,
  "required": [
    "cumulus_meta",
    "meta",
    "workflow_config"
  ],
  "definitions": {
    "CumulusMetaType": {
      "description": "External resources accessible to the Task. The paths being present here allows configuration to parameterize values that are not known until the stack is created.  For instance, a configuration field have the value \"{cumulus_meta.buckets.private}\", which instructs the task to look up the private bucket while allowing the Task to remain ignorant of what buckets are available.",
      "type": "object",
      "properties": {
        "stack": {
          "description": "The name of the task's CloudFormation Task, useful as a prefix",
          "type": "string",
          "minLength": 1
        },
        "buckets": {
          "description": "Names of S3 buckets available to the app",
          "type": "object",
          "properties": {
            "internal": {
              "description": "The name of the bucket holding configuration and deployment data",
              "type": "string",
              "minLength": 1
            },
            "private": {
              "description": "The name of the bucket holding internal platform data",
              "type": "string",
              "minLength": 1
            },
            "protected": {
              "description": "The name of the bucket holding protected data",
              "type": "string",
              "minLength": 1
            },
            "public": {
              "description": "The name of the bucket holding data to be served publicly",
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "internal",
            "private",
            "public"
          ]
        },
        "state_machine": {
          "description": "(when message_source is sfn) The ARN of the state machine being run",
          "type": "string"
        },
        "execution_name": {
          "description": "(when message_source is sfn) The name of the execution being run",
          "type": "string"
        },
        "workflow_name": {
          "description": "(when message_source is sfn) The name of the workflow being run",
          "type": "string"
        },
        "message_source": {
          "description": "A string describing the source that caused ingest to start.",
          "type": "string",
          "enum": [
            "sfn",
            "stdin",
            "local"
          ]
        },
        "createdAt": {
          "description": "When the execution was created",
          "type": "number"
        },
        "id": {
          "description": "Unique ID identifying the ingest",
          "type": "string"
        },
        "task": {
          "description": "(Non-Step-Function only) The task to run. It must be specified when message_source is local",
          "type": "string"
        }
      },
      "required": [
        "stack",
        "buckets",
        "message_source"
      ],
      "patternProperties": {
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      },
      "additionalProperties": false
    },
    "ProviderType": {
      "title": "Provider",
      "description": "Defines a provider configuration for ingest. Any field from the provider is allowed.",
      "type": "object",
      "properties": {
        "id": {
          "description": "An id used to identify this provider",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "id"
      ],
      "patternProperties": {
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      }
    },
    "WorkflowConfigType": {
      "title": "Workflow Config",
      "description": "Defines configuration for tasks that are part of a workflow as a map of task name to a JSON object containing configuration settings.",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[0-9a-zA-Z_\\-.]+$": {
          "description": "Any configuration properties are permitted here for the task.",
          "type": "object"
        },
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      },
      "additionalProperties": false
    },
    "CmrType": {
      "description": "CMR credential for exporting metadata to CMR",
      "type": "object",
      "properties": {
        "username": {
          "description": "CMR user name",
          "type": "string"
        },
        "password": {
          "description": "CMR encrypted password",
          "type": "string"
        },
        "clientId": {
          "description": "Earthdata client ID",
          "type": "string"
        },
        "provider": {
          "description": "CMR provide ID",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password",
        "clientId",
        "provider"
      ],
      "patternProperties": {
        "^_.*$": {
          "description": "Any fields starting with _ are ignored."
        }
      },
      "additionalProperties": false
    }
  }
}
